AWSTemplateFormatVersion: 2010-09-09
Description: >-
  ArticleContentHandler
Transform:
- AWS::Serverless-2016-10-31

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: get-all-items.js
  getAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-all-items.getAllItemsHandler
      Runtime: nodejs18.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Http get all items from ContentArticles table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref ContentArticles
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          SAMPLE_TABLE: !Ref ContentArticles
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: get-by-id.js
  getByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-by-id.getByIdHandler
      Runtime: nodejs18.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Http get item from ContentArticles table by id.
        id from a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref ContentArticles
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          ContentArticles: !Ref ContentArticles
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{id}
            Method: GET

    
  deleteByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/delete-item.deleteItemHandler
      Runtime: nodejs18.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Http delete an item from ContentArticles table by id.
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref ContentArticles
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          ContentArticles: !Ref ContentArticles
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{id}
            Method: DELETE

      
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: put-item.js
  putItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/put-item.putItemHandler
      Runtime: nodejs18.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Push item to ContentArticles table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref ContentArticles
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          ContentArticles: !Ref ContentArticles
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: POST
  
  SyncAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/sync-all-items.syncAllItemsHandler
      Runtime: nodejs18.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Sync all items from ContentArticles table to s3 bucket.
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref ContentArticles
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          ContentArticles: !Ref ContentArticles
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: rate(10 minutes)
  # Simple syntax to create a DynamoDB table with a single attribute primary key, more in
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesssimpletable

  # DynamoDB table to store item: {id: &lt;ID&gt;, name: &lt;NAME&gt;}
  ContentArticles:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
          
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  ArticleContentResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ArticleContentInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ArticleContentResourceGroup
      AutoConfigurationEnabled: 'true'
Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
# # More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Tracing: Active
  Api:
    TracingEnabled: true
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"
